plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
}

group 'org.example'
version '1.0-SNAPSHOT'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
compileTestJava.options.encoding = 'UTF-8'
compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

def allureVersion = '2.18.1',
    selenideVersion = '6.6.6',
    junitVersion = "5.8.2"

allure{
    version.set(allureVersion)
}


dependencies {

    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            'io.rest-assured:rest-assured:5.1.1',
            "org.aeonbits.owner:owner:1.0.12",
            'org.assertj:assertj-core:3.23.1',
            'org.slf4j:slf4j-simple:1.7.36',
            "org.junit.jupiter:junit-jupiter:$junitVersion")
    testImplementation 'org.aspectj:aspectjweaver:1.9.9.1' //Наблюдатель
    testImplementation "io.qameta.allure:allure-junit5:$allureVersion"
    testImplementation "io.qameta.allure:allure-commandline:$allureVersion"
    testImplementation "io.qameta.allure:allure-assertj:$allureVersion"
    testImplementation "io.qameta.allure:allure-rest-assured:$allureVersion"
    testImplementation "io.qameta.allure:allure-java-commons:$allureVersion"
    testImplementation "io.qameta.allure:allure-selenide:$allureVersion"
    testImplementation "io.qameta.allure:allure-rest-assured:$allureVersion"

}

test {
    useJUnitPlatform()
    systemProperty "file.encoding", "utf-8"
    systemProperty 'allure.results.directory', 'build/allure-results'

}